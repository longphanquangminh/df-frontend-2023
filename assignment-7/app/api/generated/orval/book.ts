/**
 * Generated by orval v6.18.1 üç∫
 * Do not edit manually.
 * Swagger API
 * This is a swagger for API.
 * OpenAPI spec version: 1.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  BooksResponse,
  GetBooksParams,
  BookResponse,
  CreateBookRequest,
  UpdateBookRequest,
  MessageResponse
} from './bookstore.schemas'




  /**
 * Get list of books
 * @summary Get list of books
 */
export const getBooks = <TData = AxiosResponse<BooksResponse>>(
    params?: GetBooksParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/books`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }
/**
 * Create new book
 * @summary Create new book
 */
export const createBook = <TData = AxiosResponse<BookResponse>>(
    createBookRequest: CreateBookRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/books`,
      createBookRequest,options
    );
  }
/**
 * Get book by id
 * @summary Get book by id
 */
export const getBook = <TData = AxiosResponse<BookResponse>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/books/${id}`,options
    );
  }
/**
 * Update book
 * @summary Update book
 */
export const updateBook = <TData = AxiosResponse<BookResponse>>(
    id: number,
    updateBookRequest: UpdateBookRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/books/${id}`,
      updateBookRequest,options
    );
  }
/**
 * Delete book by id
 * @summary Delete book by id
 */
export const deleteBook = <TData = AxiosResponse<MessageResponse>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/books/${id}`,options
    );
  }
